[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fpl-toolkit"
version = "0.1.0"
description = "Fantasy Premier League toolkit with analysis, AI advisors, and mobile-friendly APIs"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Amber Bridgers", email = "amber@example.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11", 
    "Programming Language :: Python :: 3.12",
    "Topic :: Games/Entertainment :: Board Games",
]
requires-python = ">=3.10"
dependencies = [
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
    "click>=8.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
db = [
    "sqlalchemy>=2.0.0",
    "psycopg2-binary; extra=='postgresql'",
]
web = [
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.20.0",
    "streamlit>=1.25.0",
]
ai = [
    "sentence-transformers>=2.2.0",
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "numpy>=1.24.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "httpx[test]>=0.24.0",
]
postgresql = [
    "psycopg2-binary>=2.9.0",
]

[project.urls]
Homepage = "https://github.com/AmberMaze/Fpl-toolkit"
Repository = "https://github.com/AmberMaze/Fpl-toolkit"
Issues = "https://github.com/AmberMaze/Fpl-toolkit/issues"

[project.scripts]
fpl-toolkit = "fpl_toolkit.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/fpl_toolkit"]

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py310']
line-length = 88

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "-v --tb=short"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/fpl_toolkit"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]